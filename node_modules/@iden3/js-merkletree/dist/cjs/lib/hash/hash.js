"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.ZERO_HASH = exports.Hash = void 0;
const constants_1 = require("../../constants");
const utils_1 = require("../utils");
class Hash {
    constructor(_bytes) {
        if (_bytes?.length) {
            if (_bytes.length !== constants_1.HASH_BYTES_LENGTH) {
                throw new Error(`Expected ${constants_1.HASH_BYTES_LENGTH} bytes, found ${_bytes.length} bytes`);
            }
            this.bytes = _bytes;
        }
        else {
            this.bytes = new Uint8Array(constants_1.HASH_BYTES_LENGTH);
        }
    }
    // returns a new copy, in little endian
    get value() {
        return this.bytes;
    }
    // bytes should be in big-endian
    set value(bytes) {
        if (bytes.length !== constants_1.HASH_BYTES_LENGTH) {
            throw `Expected 32 bytes, found ${bytes.length} bytes`;
        }
        this.bytes = (0, utils_1.swapEndianness)(bytes);
    }
    string() {
        return this.bigInt().toString(10);
    }
    hex() {
        return (0, utils_1.bytes2Hex)(this.bytes);
    }
    equals(hash) {
        return (0, utils_1.bytesEqual)(this.value, hash.value);
    }
    bigInt() {
        const bytes = (0, utils_1.swapEndianness)(this.value);
        return BigInt((0, utils_1.bytes2BinaryString)(bytes));
    }
}
exports.Hash = Hash;
exports.ZERO_HASH = new Hash();
//# sourceMappingURL=hash.js.map