"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.Logger = void 0;
const winston_1 = __importDefault(require("winston"));
class Logger {
    static info(message, payload = {}) {
        if (Logger.isLocalEnv) {
            console.info(message, payload);
            return;
        }
        Logger.instance.info(message, payload);
    }
    static error(message, error) {
        if (Logger.isLocalEnv) {
            console.error(message, error);
            return;
        }
        Logger.instance.error(message, error);
    }
    static warn(message, data) {
        if (Logger.isLocalEnv) {
            console.warn(message, data);
            return;
        }
        Logger.instance.warn(message, data);
    }
    static debug(message, data) {
        if (Logger.isLocalEnv) {
            console.debug(message, data);
            return;
        }
        Logger.instance.debug(message, data);
    }
    static enableLogger() {
        Logger.isLocalEnv = false;
    }
}
exports.Logger = Logger;
Logger.isLocalEnv = process.env.NODE_ENV === "local";
Logger.instance = winston_1.default.createLogger({
    transports: [
        new winston_1.default.transports.Console(),
    ],
    format: winston_1.default.format.combine(winston_1.default.format.json()),
    exitOnError: false,
});
//# sourceMappingURL=index.js.map