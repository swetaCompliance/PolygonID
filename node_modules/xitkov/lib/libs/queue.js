"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.Queue = void 0;
const bull_1 = __importDefault(require("bull"));
const logger_1 = require("../logger");
class Queue {
    constructor(name, redisUrl, opts = {}) {
        var _a;
        const defaultOpts = {
            limiter: {
                duration: 50000,
                max: 30,
            },
            ...opts
        };
        const env = (_a = process.env.ENVIRONMENT) !== null && _a !== void 0 ? _a : 'dev';
        let queueName = `${name}_${env}`;
        if (/prod/gi.test(env) && !/pre/gi.test(env)) {
            queueName = name;
        }
        this.queue = new bull_1.default(queueName, redisUrl, defaultOpts);
        this.queueName = queueName;
        this.queue.on('completed', function (job, result) {
            const payload = { job, result };
            logger_1.Logger.info(`Completed ${queueName}: `, payload);
        });
        this.queue.on('failed', async function (job, error) {
            const payload = { job, error };
            logger_1.Logger.info(`Failed ${queueName}: `, payload);
        });
    }
    async add(data, opts) {
        const options = {
            removeOnComplete: true,
            removeOnFail: true,
            attempts: 1,
            ...(opts !== null && opts !== void 0 ? opts : {})
        };
        return this.queue.add(data, options);
    }
    get consume() {
        return this.queue.process;
    }
}
exports.Queue = Queue;
//# sourceMappingURL=queue.js.map